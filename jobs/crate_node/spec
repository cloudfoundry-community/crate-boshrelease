---
name: crate_node
packages:
  - bosh-helpers
  - crate
  - openjdk7

consumes:
- name: peers
  type: crate_peers
  
provides:
- name: peers
  type: crate_peers
 
templates:
  bin/ctl: bin/ctl
  bin/monit_debugger: bin/monit_debugger
  data/properties.sh.erb: data/properties.sh
  helpers/ctl_setup.sh: helpers/ctl_setup.sh
  helpers/ctl_utils.sh: helpers/ctl_utils.sh
  config/crate.yml.erb: config/crate.yml
  config/logging.yml.erb: config/logging.yml  

properties:
  crate.user:
    description: "User which will own the Crate services"
    default: "root"
  crate.group:
    description: "Group which will own the Crate services"
    default: "vcap"

  crate.cluster.name:
    description: "Cluster Name"
    default: "crate"

  crate.master_nodes:
    description: "Array of master nodes hostnames/addresses"
    default: []

  crate.cluster.graceful_stop.min_availability:
    description: "The minimum data availability the cluster needs to ensure when a certain node is shut down"
  crate.cluster.graceful_stop.reallocate:
    description: "The cluster may reallocate shards to ensure minimum data availabillity before a certain node shuts down"
  crate.cluster.graceful_stop.timeout:
    description: "The time to wait for the reallocation process to be finished"
  crate.cluster.graceful_stop.force:
    description: "The force setting allows you to force a shutdown of a node when the graceful shutdown process runs into the cluster.graceful_stop.timeout"

  crate.cluster.routing.allocation.enable:
    description: "Limit shard allocations to certain kinds of shards, for example if you perform a rolling cluster upgrade"
  crate.cluster.routing.allocation.allow_rebalance:
    description: "Allow to control when rebalancing will happen based on the total state of all the indices shards in the cluster"
  crate.cluster.routing.allocation.cluster_concurrent_rebalance:
    description: "Define how many concurrent rebalancing tasks are allowed cluster wide"
  crate.cluster.routing.allocation.node_initial_primaries_recoveries:
    description: "Define the number of initial recoveries of primaries that are allowed per node"
  crate.cluster.routing.allocation.node_concurrent_recoveries:
    description: "How many concurrent recoveries are allowed to happen on a node"
  crate.cluster.routing.allocation.balance.shard:
    description: "Defines the weight factor for shards allocated on a node (float)"
  crate.cluster.routing.allocation.balance.index:
    description: "Defines a factor to the number of shards per index allocated on a specific node (float)"
  crate.cluster.routing.allocation.balance.primary:
    description: "Defines a weight factor for the number of primaries of a specific index allocated on a node (float)"
  crate.cluster.routing.allocation.balance.threshold:
    description: "Minimal optimization value of operations that should be performed (non negative float)"
  crate.cluster.routing.allocation.disk.threshold_enabled:
    description: "Prevent shard allocation on nodes depending on the disk usage"
  crate.cluster.routing.allocation.disk.watermark.low:
    description: "Defines the lower disk threshold limit for shard allocations"
  crate.cluster.routing.allocation.disk.watermark.high:
    description: "Defines the higher disk threshold limit for shard allocations"

  crate.cluster.info_update_interval:
    description: "Defines how often the cluster collection metadata information if no concrete event is triggered"

  crate.node.master:
    description: "Set if you want this node to never become a master node"
  crate.node.data:
    description: "Set if you want this node to never become a data node"
  crate.node.rack:
    description: "Node generic attributes"
  crate.node.max_local_storage_nodes:
    description: "By default, multiple nodes are allowed to start from the same installation location to disable it, set the following"

  crate.index.number_of_shards:
    description: "Set the number of shards (splits) of a table (5 by default)"
  crate.index.number_of_replicas:
    description: "Set the number of replicas (additional copies) of a table (1 by default)"

  crate.index.search.slowlog.threshold.query.warn:
    description: "Shard level query threshold warn logging"
  crate.index.search.slowlog.threshold.query.info:
    description: "Shard level query threshold info logging"
  crate.index.search.slowlog.threshold.query.debug:
    description: "Shard level query threshold debug logging"
  crate.index.search.slowlog.threshold.query.trace:
    description: "Shard level query threshold trace logging"
  crate.index.search.slowlog.threshold.fetch.warn:
    description: "Shard level fetch threshold warn logging"
  crate.index.search.slowlog.threshold.fetch.info:
    description: "Shard level fetch threshold info logging"
  crate.index.search.slowlog.threshold.fetch.debug:
    description: "Shard level fetch threshold debug logging"
  crate.index.search.slowlog.threshold.fetch.trace:
    description: "Shard level fetch threshold trace logging"
  crate.index.indexing.slowlog.threshold.index.warn:
    description: "Shard level index threshold warn logging"
  crate.index.indexing.slowlog.threshold.index.info:
    description: "Shard level index threshold info logging"
  crate.index.indexing.slowlog.threshold.index.debug:
    description: "Shard level index threshold debug logging"
  crate.index.indexing.slowlog.threshold.index.trace:
    description: "Shard level index threshold trace logging"

  crate.bootstrap.mlockall:
    description: "Set this property to true to lock the memory (Crate performs poorly when JVM starts swapping: you should ensure that it _never_ swaps)"

  crate.network.bind_host:
    description: "Set the bind address specifically (IPv4 or IPv6)"
  crate.network.publish_host:
    description: "Set the address other nodes will use to communicate with this node"
  crate.network.host:
    description: "Set both 'bind_host' and 'publish_host'"

  crate.transport.tcp.port:
    description: "Set a custom port for the node to node communication (4300 by default)"
  crate.transport.tcp.compress:
    description: "Enable compression for all communication between nodes (disabled by default)"

  crate.http.port:
    description: "Set a custom port to listen for HTTP traffic"
  crate.http.max_content_length:
    description: "Set a custom allowed content length"
  crate.http.enabled:
    description: "Disable HTTP completely"

  crate.indices.recovery.max_size_per_sec:
    description: "Set to throttle throughput when recovering (eg. 100mb, by default unlimited)"
  crate.indices.recovery.concurrent_streams:
    description: "Set to limit the number of open concurrent streams when recovering a shard from a peer"
  crate.indices.recovery.file_chunk_size:
    description: "Specifies the chunk size used to copy the shard data from the source shard"
  crate.indices.recovery.translog_ops:
    description: "Specifies how many transaction log lines should be transfered between shards in a single request during the recovery process"
  crate.indices.recovery.translog_size:
    description: "Specifies how much data of the transaction log should be transfered between shards in a single request during the recovery process"
  crate.indices.recovery.compress:
    description: "Define if transferred data should be compressed during the recovery process"
  crate.indices.recovery.max_bytes_per_sec:
    description: "Specifies the maximum number of bytes that can be transferred during shard recovery per seconds"

  crate.indices.store.throttle.type:
    description: "Allows to throttle `merge` (or `all`) process of the store module"
  crate.indices.store.throttle.max_bytes_per_sec:
    description: "If throttling is enabled, this setting specifies the maximum bytes per second a store module process can operate with"

  crate.indices.fielddata.breaker.limit:
    description: "Specifies the limit for the fielddata breaker"
  crate.indices.fielddata.breaker.overhead:
    description: "A constant that all field data estimations are multiplied with to determine a final estimation"

  crate.discovery.zen.ping.multicast.enabled:
    description: "Enable/Disable multicast discovery"
    default: false
  crate.discovery.zen.minimum_master_nodes:
    description: "Set to ensure a node sees M other master eligible nodes to be considered operational within the cluster"
  crate.discovery.zen.ping.timeout:
    description: "Set the time to wait for ping responses from other nodes when discovering"
  crate.discovery.zen.publish_timeout:
    description: "Time a node is waiting for responses from other nodes to a published cluster state"
  crate.discovery.zen.fd.ping_timeout:
    description: "Ping timeout"
  crate.discovery.zen.fd.ping_retries:
    description: "Ping retries"
  crate.discovery.zen.fd.ping_interval:
    description: "Ping interval"

  crate.threadpool.index.type:
    description: "Thread pool type"
  crate.threadpool.index.queue_size:
    description: "Thread pool queue size"

  crate.planner.optimize_pk_queries:
    description: "If disabled, queries filtering for a primary key will be broadcast to all available shards instead of hitting just the related single shard"

  crate.insert_by_query.request_timeout:
    description: "Insert from subquery timeout"

  crate.node_breaker.query_limit:
    description: "Specifies the limit for the query breaker"
  crate.node_breaker.query_overhead:
    description: "A constant that all query data estimations are multiplied with to determine a final estimation"

  crate.udc.enabled:
    description: "enable/disable usage data collection at all"
  crate.udc.initial_delay:
    description: "The delay for first ping after start-up"
  crate.udc.interval:
    description: "The interval a ping is sent"
  crate.udc.url:
    description: "The url the ping is sent to"

  crate.es.api_enabled:
    description: "enable/disable elasticsearch HTTP REST API"

  crate.monitor.jvm.gc.parnew.warn:
    description: "ParNew GC Logging"
  crate.monitor.jvm.gc.parnew.info:
    description: "ParNew GC Logging"
  crate.monitor.jvm.gc.parnew.debug:
    description: "ParNew GC Logging"
  crate.monitor.jvm.gc.concurrentmarksweep.warn:
    description: "ConcurrentMarkSweep GC Logging"
  crate.monitor.jvm.gc.concurrentmarksweep.info:
    description: "ConcurrentMarkSweep GC Logging"
  crate.monitor.jvm.gc.concurrentmarksweep.debug:
    description: "ConcurrentMarkSweep GC Logging"

  crate.java.heap_size:
    description: "Java heap size"
  crate.java.min_mem:
    description: "Java min memory"
  crate.java.max_mem:
    description: "Java max memory"
  crate.java.direct_size:
    description: "Java direct size"
  crate.java.use_gc_logging:
    description: "Java use GC logging"

  crate.logger.action:
    description: ""
    default: "DEBUG"
  crate.logger.indices_recovery:
    description: "Log peer shard recovery"
    default: false
  crate.logger.discovery:
    description: "Log the discovery process"
    default: false
  crate.logger.index_search_slowlog:
    description: "Log slow index search"
    default: false
  crate.logger.index_indexing_slowlog:
    description: "Log slow index indexing"
    default: false
